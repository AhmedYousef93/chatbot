<?php

namespace App\Http\Controllers\API;

use App\Http\Controllers\Controller;
use App\Services\ChatService;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;

class ChatController extends Controller
{

    public function __construct(protected ChatService $chatService) {}

//    public function smartChat(Request $request): JsonResponse
//    {
//        $userMessage = $request->message;
//
//        $greetings = $this->chatService->greetings($userMessage);
//
//        if ($greetings) {
//            return response()->json([
//                'reply' => 'مرحباً! كيف يمكنني مساعدتك اليوم؟ 😊'
//            ]);
//        }
//
//        try {
//            $propertyData = $this->chatService->callAi($userMessage);
//
//            return response()->json([
//                'reply' => count($propertyData) > 0 ? $propertyData : 'لم يتم العثور على وحدات مطابقة لطلبك، يرجى تعديل الطلب.',
//            ]);
//
//        } catch (\Exception $e) {
//            return response()->json([
//                'message' => 'An error occurred while processing your request. Please try again later.'
//            ], 500);
//        }
//
//
//    }


    public function smartChat(Request $request): JsonResponse
    {
        $userMessage = $request->message;

        $greetings = $this->chatService->greetings($userMessage);
        if ($greetings) {
            return response()->json([
                'reply' => 'مرحباً! كيف يمكنني مساعدتك اليوم؟ 😊'
            ]);
        }

        try {
            $propertyData = $this->chatService->callAiWithMemory($userMessage, $request);

            return response()->json([
                'reply' => count($propertyData) > 0 ? $propertyData : 'لم يتم العثور على وحدات مطابقة لطلبك، يرجى تعديل الطلب.',
            ]);
        } catch (\Exception $e) {
            return response()->json([
                'message' => 'حدث خطأ أثناء معالجة الطلب. حاول لاحقًا.'
            ], 500);
        }
    }


}
